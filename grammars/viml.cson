name: "VimL"
scopeName: "source.viml"
injectionSelector: "source.gfm source.embedded.viml"
fileTypes: [
	"vim"
	"vimrc"
	"gvimrc"
	"nvimrc"
	"_vimrc"
	"exrc"
	"nexrc"
	"vmb"
]
firstLineMatch: """(?x)
	
	# Vimball
	(?:^|\\n)UseVimball\\b
	
	|
	
	# Hashbang
	^\\#!.*(?:\\s|\\/|(?<=!)\\b)
		(?:vim|nvim)
	(?:$|\\s)
	
	|
	
	# Modeline
	(?:
		# Vim/Vi modeline, accounting for all possible variations
		(?:(?:^|[ \\t])(?:vi|Vi(?=m))(?:m[<=>]?[0-9]+|m)?|[ \\t]ex)(?=:(?=[ \\t]*set?[ \\t][^\\r\\n:]+:)|:(?![ \\t]*set?[ \\t]))
		(?:(?:[ \\t]*:[ \\t]*|[ \\t])\\w*(?:[ \\t]*=(?:[^\\\\\\s]|\\\\.)*)?)*[ \\t:]
		(?:filetype|ft|syntax)[ \\t]*=
			(?i:vim)
		(?=$|\\s|:)
		
		|
		
		# Emacs modeline, assuming a major mode for VimScript even exists
		-\\*-(?i:[ \\t]*(?=[^:;\\s]+[ \\t]*-\\*-)|(?:.*?[ \\t;]|(?<=-\\*-))[ \\t]*mode[ \\t]*:[ \\t]*)
			(?i:Vim|VimL|VimScript)
		(?=[ \\t;]|(?<![-*])-\\*-).*?-\\*-
	)
"""
foldingStartMarker: "^(?:if|while|for|fu|function|augroup|aug)"
foldingStopMarker: "(?:endif|endwhile|endfor|endf|endfunction|augroup\\.END|aug\\.END)$"
limitLineLength: no
patterns: [{
	# VimBall archive
	name:  "meta.file-archive.vimball"
	begin: '\\A(?=" Vimball Archiver)'
	end:   "(?=A)B"
	patterns: [{
		# Help file
		name:  "meta.file-record.help-file.vimball"
		begin: "^(.*?\\S.*?\\.txt)(\\t)(\\[{3}1)(?=$)"
		end:   "(?!\\G)(?=^.*?\\S.*?\\t\\[{3}1$)"
		beginCaptures:
			0: name: "markup.heading.1.vimball"
			1: name: "entity.name.file.path.vimball"
			2: name: "punctuation.whitespace.tab.separator.vimball"
			3: name: "punctuation.definition.header.vimball"
		contentName: "text.embedded.vim-help"
		patterns: [{
			# Line count
			begin: "\\G"
			end:   "^(\\d+$)?"
			endCaptures:
				0: name: "comment.ignored.line-count.viml"
				1: name: "sublimelinter.gutter-mark"
		}, include: "text.vim-help"]
	},{
		# Vim script file
		name:  "meta.file-record.vimball.viml"
		begin: "^(.*?\\S.*?[ \\t]*?)(\\t)(\\[{3}1)(?=$)"
		end:   "(?!\\G)(?=^.*?\\S.*?\\t\\[{3}1$)"
		beginCaptures:
			0: name: "markup.heading.1.vimball"
			1: name: "entity.name.file.path.vimball"
			2: name: "punctuation.whitespace.tab.separator.vimball"
			3: name: "punctuation.definition.header.vimball"
		patterns: [{
			# Line count
			begin: "\\G"
			end:   "^(\\d+$)?"
			endCaptures:
				0: name: "comment.ignored.line-count.viml"
				1: name: "sublimelinter.gutter-mark"
		}, include: "#main"]
	}, include: "#main"]
}, include: "#main"]

repository:
	main:
		patterns: [
			{include: "#vimTodo"}
			{include: "#vimMap"}
			{include: "#comments"}
			{include: "#modelines"}
			{include: "#pathname"}
			{include: "#escape"}
			{include: "#strings"}
			{include: "#hashbang"}
			{include: "#numbers"}
			{include: "#syntax"}
			{include: "#highlightLink"}
			{include: "#funcDef"}
			{include: "#auCmd"}
			{include: "#auGroup"}
			{include: "#parameter"}
			{include: "#assignment"}
			{include: "#expr"}
			{include: "#keyword"}
			{include: "#register"}
			{include: "#filetype"}
			{include: "#variable"}
			{include: "#supportType"}
			{include: "#supportVariable"}
			{include: "#extraVimOptions"}
			{include: "#extraVimFunc"}
			{include: "#keywordLists"}
		]
	
	strings:
		patterns: [{
			name: "string.quoted.double.empty.viml"
			match: '(")(")'
			captures:
				1: name: "punctuation.definition.string.begin.viml"
				2: name: "punctuation.definition.string.end.viml"
		},{
			name: "string.quoted.single.empty.viml"
			match: "(')(')"
			captures:
				1: name: "punctuation.definition.string.begin.viml"
				2: name: "punctuation.definition.string.end.viml"
		},{
			name: "string.quoted.double.viml"
			match: '(")((?:[^\\\\"]|\\\\.)*)(")'
			captures:
				1: name: "punctuation.definition.string.begin.viml"
				2: patterns: [include: "#escape"]
				3: name: "punctuation.definition.string.end.viml"
		},{
			name: "string.quoted.single.viml"
			match: "(')((?:[^']|'')*)(')"
			captures:
				1: name: "punctuation.definition.string.begin.viml"
				2: patterns: [{
					name: "constant.character.escape.quotes.viml"
					match: "''"
				}]
				3: name: "punctuation.definition.string.end.viml"
		},{
			name: "string.regexp.interpolated.viml"
			match: "(/)(?:\\\\\\\\|\\\\/|[^\\n/])*(/)"
			captures:
				1: name: "punctuation.section.regexp.begin.viml"
				2: name: "punctuation.section.regexp.end.viml"
		}]
	
	
	# Something prefixed with a backslash
	escape:
		patterns: [
			{include: "#escapedCodePoint"}
			{include: "#escapedKey"}
			{match: "(\\\\)b",  name: "constant.character.escape.backspace.viml", captures: 1: name: "punctuation.definition.escape.viml"}
			{match: "(\\\\)e",  name: "constant.character.escape.escape.viml",    captures: 1: name: "punctuation.definition.escape.viml"}
			{match: "(\\\\)f",  name: "constant.character.escape.form-feed.viml", captures: 1: name: "punctuation.definition.escape.viml"}
			{match: "(\\\\)n",  name: "constant.character.escape.newline.viml",   captures: 1: name: "punctuation.definition.escape.viml"}
			{match: "(\\\\)r",  name: "constant.character.escape.return.viml",    captures: 1: name: "punctuation.definition.escape.viml"}
			{match: "(\\\\)t",  name: "constant.character.escape.tab.viml",       captures: 1: name: "punctuation.definition.escape.viml"}
			{match: "(\\\\)\\1",name: "constant.character.escape.backslash.viml", captures: 1: name: "punctuation.definition.escape.viml"}
			{match: '(\\\\)"',  name: "constant.character.escape.quote.viml",     captures: 1: name: "punctuation.definition.escape.viml"}
			{match: "(\\\\).",  name: "constant.character.escape.other.viml",     captures: 1: name: "punctuation.definition.escape.viml"}
		]
	
	
	# Characters specified by codepoint
	escapedCodePoint:
		patterns: [{
			# Hexadecimal, short: \x20
			name: "constant.character.escape.codepoint.hex.short.viml"
			match: "(\\\\)[xX][0-9A-Fa-f]{1,2}"
			captures:
				1: name: "punctuation.definition.escape.backslash.viml"
		},{
			# Codepoint, long: \u0020 \u00000020
			name: "constant.character.escape.codepoint.hex.long.viml"
			match: "(\\\\)(?:u[0-9A-Fa-f]{1,4}|U[0-9A-Fa-f]{1,8})"
			captures:
				1: name: "punctuation.definition.escape.backslash.viml"
		},{
			# Codepoint, octal: \040
			name: "constant.character.escape.codepoint.octal.viml"
			match: "(\\\\)([0-7]{1,3})"
			captures:
				1: name: "punctuation.definition.escape.backslash.viml"
		}]
	
	
	escapedKey:
		name: "constant.character.escape.keymapping.viml"
		match: '(\\\\<\\*?)(?:[^">\\\\]|\\\\.)+(>)'
		captures:
			1: name: "punctuation.definition.escape.key.begin.viml"
			2: name: "punctuation.definition.escape.key.end.viml"
	
	
	# This only exists to stop stuff like ~/.vim/ being highlighted like a regex
	pathname:
		name: "constant.pathname.viml"
		begin: "~/"
		end: "(?=\\s)"


	comments:
		patterns: [{
			
			# Fully-commented line with a leading field-name
			name: "comment.line.quotes.viml"
			begin: '^\\s*(")(?=(\\s*[A-Z]\\w+)+:)'
			end:   "((:))(.*)$"
			contentName: "support.constant.field.viml"
			beginCaptures:
				1: name: "punctuation.definition.comment.viml"
			endCaptures:
				1: name: "support.constant.field.viml"
				2: name: "punctuation.separator.key-value.colon.viml"
				3: patterns: [include: "#commentInnards"]
		},{
			
			# Fully-commented line
			name: "comment.line.quotes.viml"
			begin: '^\\s*(")'
			end:   '$'
			beginCaptures:
				1: name: "punctuation.definition.comment.viml"
			patterns: [include: "#commentInnards"]
		},{
			# Trailing comment, no closing quote
			name: "comment.inline.quotes.viml"
			patterns: [include: "#commentInnards"]
			begin: '(?<!^)\\s*(")(?=[^\\n"]*$)'
			end:   "$"
			beginCaptures:
				1: name: "punctuation.definition.comment.viml"
		}]

	commentInnards:
		patterns: [
			{include: "#modelines"}
			{include: "#todo"}
		]


	# Vim modelines
	modelines:
		patterns: [{
			
			# Using "vim:set"
			name: "string.other.modeline.viml"
			patterns: [include: "#main"]
			begin: "(?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|[\\t\\x20]ex):\\s*(?=set?\\s)"
			end:   ":|$"
		},{
			name: "string.other.modeline.viml"
			patterns: [include: "#main"]
			begin: "(?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|[\\t\\x20]ex):"
			end: "$"
		}]


	# Embedded interpreter directive
	hashbang:
		name: "comment.line.shebang.viml"
		begin: "\\A#!"
		end:   "$"
		beginCaptures:
			0: name: "punctuation.definition.comment.shebang.viml"

	numbers:
		patterns: [{
			name: "constant.numeric.hex.short.viml"
			match: "0[xX][0-9A-Fa-f]+"
		},{
			name: "constant.numeric.hex.long.viml"
			match: "0[zZ][0-9A-Fa-f]+"
		},{
			name: "constant.numeric.float.exponential.viml"
			match: "(?<!\\w)-?\\d+\\.\\d+[eE][-+]?\\d+"
		},{
			name: "constant.numeric.float.viml"
			match: "(?<!\\w)-?\\d+\\.\\d+"
		},{
			name: "constant.numeric.integer.viml"
			match: "(?<!\\w)-?\\d+"
		}]
	
	funcDef:
		patterns: [{
			name: "storage.function.viml"
			match: "\\b(fu(nc?|nction)?|end(f|fu|func?|function)?)\\b"
		},{
			name: "entity.name.function.viml"
			match: "(?:([sSgGbBwWtTlL]?(:))?[\\w#]+)(?=\\()"
			captures:
				1: name: "storage.modifier.scope.viml"
				2: name: "punctuation.definition.scope.key-value.viml"
		},{
			name: "storage.modifier.$1.function.viml"
			match: "(?<=\\)|\\s)(abort|dict|closure|range)(?=\\s|$)"
		}]
	
	auCmd:
		name: "meta.autocmd.viml"
		match: "\\b(autocmd|au)(!)?\\b\\s+(?!\\*)(\\S+)\\s+(\\S+)(?:\\s+(\\+\\+(nested|once)))?"
		captures:
			1: name: "storage.type.autocmd.viml"
			2: name: "storage.modifier.force.viml"
			3: name: "meta.events-list.viml", patterns: [include: "#main"]
			4: name: "string.unquoted.autocmd-suffix-list.viml"
			5: name: "storage.modifier.$6.viml"

	auGroup:
		patterns: [
			name: "meta.augroup.viml"
			begin: "\\b(augroup|aug)(!)?\\b\\s*([\\w#]+)"
			end:   "\\b(\\1)\\s+(END)\\b"
			patterns: [include: "#main"]
			beginCaptures:
				1: name: "storage.type.function.viml"
				2: name: "storage.modifier.force.viml"
				3: name: "entity.name.function.viml"
			endCaptures:
				1: name: "storage.type.augroup.viml"
				2: name: "keyword.control.end"
		]
	
	parameter:
		name: "meta.parameter.viml"
		match: "(-)(\\w+)(=)"
		captures:
			1: name: "punctuation.definition.parameter.viml"
			2: name: "entity.name.parameter.viml"
			3: name: "punctuation.assignment.parameter.viml"

	assignment:
		patterns: [{
			name: "keyword.operator.assignment.compound.viml"
			match: "[-+.]="
		},{
			name: "keyword.operator.assignment.viml"
			match: "="
		}]

	expr:
		patterns: [
			name: "keyword.operator.logical.viml"
			match: "[&|=]{2}[?#]?|[!><]=[#?]?|[=!]~(?!\\/)[#?]?|[><][#?*]|\\b(?:isnot|is)\\b|\\\\|[-+%*]"
			
			{match: "\\s[><]\\s",name: "keyword.operator.logical.viml"}
			{match: "(?<=\\S)!", name: "storage.modifier.force.viml"}
			{match: "!(?=\\S)",  name: "keyword.operator.logical.not.viml"}
			{match: "{",         name: "punctuation.expression.bracket.curly.begin.viml"}
			{match: "}",         name: "punctuation.expression.bracket.curly.end.viml"}
			{match: "\\[",       name: "punctuation.expression.bracket.square.begin.viml"}
			{match: "\\]",       name: "punctuation.expression.bracket.square.end.viml"}
			{match: "\\(",       name: "punctuation.expression.bracket.round.begin.viml"}
			{match: "\\)",       name: "punctuation.expression.bracket.round.end.viml"}
			{match: "\\|",       name: "punctuation.separator.statement.viml"}
			{match: ",",         name: "punctuation.separator.comma.viml"}
			{match: ":",         name: "punctuation.separator.colon.viml"}
			{match: "\\.{3}",    name: "keyword.operator.rest.viml"}
			{match: "\\.",       name: "punctuation.delimiter.property.dot.viml"}
			{match: "&(?=\\w+)", name: "punctuation.definition.option.viml"}
		]
	
	keyword:
		patterns: [{
			name: "keyword.control.$1.viml"
			match: "\\b(if|while|for|return|try|catch|finally|finish|end(if|for|while|try)?|else(if)?|do|in|:)\\b"
		},{
			name: "keyword.operator.$1.viml"
			match: "\\b(unlet)\\b"
		},{
			name: "storage.type.let.viml"
			match: "\\blet\\b"
		},{
			name: "support.constant.vimball.use.viml"
			match: "(?<=^|\\n)UseVimball(?=\\s*$)"
		}]
	
	register:
		name: "variable.other.register.viml"
		match: "(@)([-\"A-Za-z\\d:.%#=*+~_/])"
		captures:
			1: name: "punctuation.definition.register.viml"
	
	variable:
		patterns: [{
			name: "variable.language.self.viml"
			match: "\\b(self)\\b"
		},{
			name: "support.variable.environment.viml"
			match: "(\\$)\\w+"
			captures:
				1: name: "punctuation.definition.variable.viml"
		},{
			name: "variable.other.viml"
			match: "(&?)(?:([sSgGbBwWlLaAvV](:))|[@$]|&(?!&))\\w*"
			captures:
				1: name: "punctuation.definition.reference.viml"
				2: name: "storage.modifier.scope.viml"
				3: name: "punctuation.definition.scope.key-value.viml"
		}]

	supportType:
		name: "entity.tag.name.viml"
		match: "(<).*?(>)"
		captures:
			1: name: "punctuation.definition.bracket.angle.begin.viml"
			2: name: "punctuation.definition.bracket.angle.end.viml"

	supportVariable:
		name: "support.variable.viml"
		match: "\\b(?:am(?:enu)?|(?:hl|inc)?search|[Bb]uf(?:[Nn]ew[Ff]ile|[Rr]ead)?|[Ff]ile[Tt]ype)\\b"


	# Highlighting link, used heavily in syntax-definition files
	highlightLink:
		match: "(?x)^\\s*
			(:)? \\s*              (?# 1: punctuation.separator.key-value.colon.viml)
			(hi|highlight)         (?# 2: support.function.highlight.viml)
			(!)?                   (?# 3: storage.modifier.force.viml)
			(?:\\s+(def|default))? (?# 4: support.function.highlight-default.viml)
			(?:\\s+(link))         (?# 5: support.function.highlight-link.viml)
			(?:\\s+([-\\w]+))      (?# 6: variable.parameter.group-name.viml)
			(?:\\s+(?:(NONE)|([-\\w]+)))?"
		captures:
			1: name: "punctuation.separator.key-value.colon.viml"
			2: name: "support.function.highlight.viml"
			3: name: "storage.modifier.force.viml"
			4: name: "support.function.highlight-default.viml"
			5: name: "support.function.highlight-link.viml"
			6: name: "variable.parameter.group-name.viml"
			7: name: "support.constant.highlighting.viml"
			8: name: "variable.parameter.group-name.viml"


	# Filetype assignment
	filetype:
		match: "\\b(?:(setf|setfiletype)(?:\\s+(FALLBACK))?\\s+|(ft|filetype)\\s*(=))([.\\w]+)"
		captures:
			1: name: "support.function.command.viml"
			2: name: "support.variable.option.viml"
			3: name: "storage.modifier.fallback.viml"
			4: name: "keyword.operator.assignment.viml"
			5: name: "variable.parameter.function.filetype.viml"


	# Syntax highlighting definitions
	syntax:
		name: "meta.syntax-item.viml"
		begin: "^\\s*(:)?(?:(VimFold\\w)\\s+)?\\s*(syntax|syn?)(?=\\s|$)"
		end: "$"
		beginCaptures:
			1: name: "punctuation.separator.key-value.colon.viml"
			2: name: "support.function.fold-command.viml"
			3: name: "storage.type.syntax-item.viml"
		patterns: [{
			
			# Case-matching
			match: "\\G\\s+(case)(?:\\s+(match|ignore))?(?=\\s|$)"
			captures:
				1: name: "support.function.syntax-case.viml"
				2: name: "support.constant.$2-case.viml"
		},{
			
			# Spell-checking
			match: "\\G\\s+(spell)(?:\\s+(toplevel|notoplevel|default))?(?=\\s|$)"
			captures:
				1: name: "support.function.syntax-spellcheck.viml"
				2: name: "support.constant.$2-checking.viml"
		},{
			
			# Keyword lists
			begin: "\\G\\s+(keyword)(?:\\s+([-\\w]+))?"
			end: "(?=$)"
			beginCaptures:
				1: name: "support.function.syntax-keywords.viml"
				2: name: "variable.parameter.group-name.viml"
			contentName: "keyword.other.syntax-definition.viml"
			patterns: [
				{include: "#syntaxOptions"}
				{include: "#assignment"}
				{include: "#expr"}
			]
		},{
			
			# Pattern-based match
			begin: "\\G\\s+(match)(?:\\s+([-\\w]+))?\\s*"
			end: "(?=$)"
			beginCaptures:
				1: name: "support.function.syntax-match.viml"
				2: name: "variable.parameter.group-name.viml"
			patterns: [include: "#syntaxRegex"]
		},{
			
			# Multiline pattern-based match
			begin: "\\G\\s+(region)(?:\\s+([-\\w]+))?"
			end: "(?=$)"
			beginCaptures:
				1: name: "support.function.syntax-region.viml"
				2: name: "variable.parameter.group-name.viml"
			patterns: [
				{include: "#syntaxOptions"}
				{include: "#main"}
			]
		},{
			
			# Group cluster
			begin: "\\G\\s+(cluster)(?:\\s+([-\\w]+))?(?=\\s|$)"
			end: "(?=$)"
			beginCaptures:
				1: name: "support.function.syntax-cluster.viml"
				2: name: "variable.parameter.group-name.viml"
			patterns: [
				{include: "#syntaxOptions"}
				{include: "#main"}
			]
		},{
			
			# Concealment
			match: "\\G\\s+(conceal)(?:\\s+(on|off)(?=\\s|$))?"
			captures:
				1: name: "support.function.syntax-conceal.viml"
				2: name: "support.constant.boolean.$2.viml"
		},{
			# Inclusion
			match: "\\G\\s+(include)(?:\\s+((@)?[-\\w]+))?(?:\\s+(\\S+))?"
			captures:
				1: name: "support.function.syntax-include.viml"
				2: name: "variable.parameter.group-name.viml"
				3: name: "punctuation.definition.group-reference.viml"
				4: name: "string.unquoted.filename.viml", patterns: [include: "#supportType"]
		},{
			
			# Sync/Redrawing mode
			begin: "\\G\\s+(sync)(?=\\s|$)"
			end: "$"
			beginCaptures:
				1: name: "support.function.syntax-sync.viml"
			patterns: [{
				
				match: "\\G\\s+(fromstart)(?=\\s|$)"
				captures:
					1: name: "support.constant.sync-$1.viml"
			},{
				match: "\\G\\s+(ccomment|clear)(?:\\s+(?![-\\w]+\\s*=)([-\\w]+))?"
				captures:
					1: name: "support.constant.sync-$1.viml"
					2: name: "variable.parameter.group-name.viml"
			},{
				match: "\\G\\s+(minlines|lines)\\s*(=)(\\d*)"
				captures:
					1: name: "support.constant.sync-mode.viml"
					2: name: "punctuation.assignment.parameter.viml"
					3: name: "constant.numeric.integer.viml"
			},{
				match: "(?x)\\G\\s+(match|region)(?:\\s+(?![-\\w]+\\s*=)([-\\w]+))?"
				captures:
					1: name: "support.constant.sync-mode.viml"
					2: name: "variable.parameter.group-name.viml"
					3: name: "support.constant.sync-mode-location.viml"
			},{
				begin: "(?<=\\s)(groupt?here|linecont)(?:\\s+(?![-\\w]+\\s*=)([-\\w]+))?(?=\\s|$)"
				end: "(?=$)"
				beginCaptures:
					1: name: "support.constant.sync-match.viml"
					2: name: "variable.parameter.group-name.viml"
				patterns: [include: "#syntaxRegex"]
			}, include: "#syntaxOptions"]
		}, include: "#main"]
	
	
	# Syntax item arguments, as described in :syn-arguments
	syntaxOptions:
		patterns: [{
			
			# Options that take a regex
			name: "meta.syntax-item.pattern-argument.viml"
			begin: "(?<=\\s)(start|skip|end)(?:\\s*(=))"
			end: "(?=$|\\s)"
			beginCaptures:
				1: name: "support.constant.$1-pattern.viml"
				2: name: "punctuation.assignment.parameter.viml"
			patterns: [include: "#regex"]
		},{
			
			# Everything else
			name: "meta.syntax-item.argument.viml"
			match: """(?x)(?<=\\s)
				((?:matchgroup|contains|containedin|nextgroup|add|remove|minlines|linebreaks|maxlines)(?=\\s*=)
				|(?:cchar|conceal|concealends|contained|display|excludenl|extend|fold|keepend|oneline|skipempty|skipnl|skipwhite|transparent))
				(?:(?=$|\\s)|\\s*(=)(\\S*)?)"""
			captures:
				1: name: "support.constant.syntax-$1.viml"
				2: name: "punctuation.assignment.parameter.viml"
				3: name: "string.unquoted.syntax-option.viml", patterns: [
					{include: "#numbers"}
					{match: ",", name: "punctuation.separator.comma.viml"}
					{match: "@", name: "punctuation.definition.group-reference.viml"}
				]
		}]
	
	
	# Body of any syntax-item option which uses an unlabelled regex
	syntaxRegex:
		patterns: [
			{include: "#syntaxOptions"}
			
			# Ensure only one regex is matched
			name: "string.regexp.viml"
			begin: "(?<=\\s)(\\S)"
			end:   "(?:(\\1)(\\S*)(.*))?$"
			patterns: [include: "#regexInnards"]
			beginCaptures:
				1: name: "punctuation.definition.string.begin.viml"
			endCaptures:
				1: name: "punctuation.definition.string.end.viml"
				2: patterns: [include: "#regexOffset"]
				3: patterns: [include: "#syntaxOptions", {include: "#main"}]
		]
	
	
	
	# Regular expression
	regex:
		name: "string.regexp.viml"
		begin: "(?<=\\s|=)(\\S)"
		end:   "$|(\\1)(\\S*)"
		patterns: [include: "#regexInnards"]
		beginCaptures:
			1: name: "punctuation.definition.string.begin.viml"
		endCaptures:
			1: name: "punctuation.definition.string.end.viml"
			2: patterns: [include: "#regexOffset"]


	# Pattern offset
	regexOffset:
		name: "meta.pattern-offset.viml"
		match: "(ms|me|hs|he|rs|re|lc)(=)(?:(\\d+)|([se])(?:([-+])(\\d+))?)(,)?"
		captures:
			1: name: "constant.language.pattern-offset.viml"
			2: name: "punctuation.assignment.parameter.viml"
			3: name: "constant.numeric.integer.viml"
			4: name: "constant.language.pattern-position.viml"
			5: name: "keyword.operator.arithmetic.viml"
			6: name: "constant.numeric.integer.viml"
			7: name: "punctuation.separator.comma.viml"


	regexInnards:
		patterns: [{
			
			# Character class
			begin: "\\["
			end:   "\\]|$"
			beginCaptures: 0: name: "punctuation.definition.character-class.begin.viml"
			endCaptures:   0: name: "punctuation.definition.character-class.end.viml"
			patterns: [include: "#regexInnards"]
		},{
			
			# Escaped character
			name: "constant.character.escape.viml"
			match: "(\\\\)."
			captures:
				1: name: "punctuation.definition.backslash.escape.viml"
		}]
	
	
	# Extra functions not picked up by keyword parser
	extraVimFunc:
		name: "support.function.viml"
		match: """(?x)\\b
			((?:echo(?:hl?)?)|exe(?:c(?:ute)?)?|smapc(?:lear)?|mapmode|(?:[xs]un)map
			|Plugin|autocmd|[cinvo]?(?:un|nore)?menu|(?:range)?go(?:to)?|(?:count)?(?:pop?|tag?|tn(?:ext)?|tp(?:revious)?|tr(?:ewind)?)
			|(?:range)?(?:s(?:ubstitute)?|ret(?:ab)?|g(?:lobal)?)|unm(?:ap)?|map_l|mapc(?:lear)?|N?buffer|N?bnext|N?bNext|N?bprevious|N?bmod
			|ab(?:breviate)?|norea(?:bbrev)?|[ic](?:un|nore)?ab|split_f|rangefold|[ic](?:un|nore)?ab|[ic]abbrev|edit_f|next_f|[vcoxli]u
			|(?:range)?(?:w(?:rite)?|up(?:date)?)|sar|lunmap|lear|ap|nun|sunm)
		\\b"""
	
	
	# Extra options not picked up by keyword parser
	extraVimOptions:
		name: "support.variable.option.viml"
		match: """(?x)\\b (no)?
			(altwerase|bf|escapetime|extended|filec|iclower|keytime|leftright|li|lock|noprint|octal|recdir|searchincr
			|shellmeta|ttywerase|windowname|wl|wraplen)
		\\b"""

	# Map commands cannot have trailing comments but must match the whole line
	vimMap:
		name: "support.function.vimMap.viml"
		begin: """(?x)\\b
			(map|map!|smap|[nvxoilc]m(?:ap)?|tmap?
			|(?:no|ono|ino|cno|tno)(?:remap)?|noremap!|(?:nn|vn|xn|ln)(?:oremap)?|snor(?:emap)?
			)
		\\b"""
		end: "$"
		patterns: [
			{
				include: "#supportType"
			}
		]


	# The following lists are auto-extracted from Vim's syntax file.
	# Run `bin/update` to repopulate them.
	keywordLists:
		patterns: [
			{include: "#vimTodo"}
			{include: "#vimAugroupKey"}
			{include: "#vimAutoEvent"}
			{include: "#vimBehaveModel"}
			{include: "#vimCommand"}
			{include: "#vimFTCmd"}
			{include: "#vimFTOption"}
			{include: "#vimFgBgAttrib"}
			{include: "#vimFuncKey"}
			{include: "#vimFuncName"}
			{include: "#vimGroup"}
			{include: "#vimGroupSpecial"}
			{include: "#vimHLGroup"}
			{include: "#vimHiAttrib"}
			{include: "#vimHiClear"}
			{include: "#vimHiCtermColor"}
			{include: "#vimMapModKey"}
			{include: "#vimOption"}
			{include: "#vimPattern"}
			{include: "#vimStdPlugin"}
			{include: "#vimSynCase"}
			{include: "#vimSynType"}
			{include: "#vimSyncC"}
			{include: "#vimSyncLinecont"}
			{include: "#vimSyncMatch"}
			{include: "#vimSyncNone"}
			{include: "#vimSyncRegion"}
			{include: "#vimUserAttrbCmplt"}
			{include: "#vimUserAttrbKey"}
			{include: "#vimUserCommand"}
			{include: "#vimErrSetting"}
		]

	vimTodo:
		name: "support.constant.${1:/downcase}.viml"
		match: """(?x) \\b
			( COMBAK
			| FIXME
			| TODO
			| XXX
			) \\b
		"""

	vimAugroupKey:
		name: "support.function.vimAugroupKey.viml"
		match: """(?x) \\b
			( aug
			| augroup
			) \\b
		"""

	vimAutoEvent:
		name: "support.function.auto-event.viml"
		match: """(?xi) \\b
			( BufAdd
			| BufCreate
			| BufDelete
			| BufEnter
			| BufFilePost
			| BufFilePre
			| BufHidden
			| BufLeave
			| BufNewFile
			| BufNew
			| BufReadCmd
			| BufReadPost
			| BufReadPre
			| BufRead
			| BufUnload
			| BufWinEnter
			| BufWinLeave
			| BufWipeout
			| BufWriteCmd
			| BufWritePost
			| BufWritePre
			| BufWrite
			| CmdUndefined
			| CmdlineChanged
			| CmdlineEnter
			| CmdlineLeave
			| CmdwinEnter
			| CmdwinLeave
			| ColorSchemePre
			| ColorScheme
			| CompleteChanged
			| CompleteDonePre
			| CompleteDone
			| CursorHoldI
			| CursorHold
			| CursorMovedI
			| CursorMoved
			| DiffUpdated
			| DirChanged
			| EncodingChanged
			| ExitPre
			| FileAppendCmd
			| FileAppendPost
			| FileAppendPre
			| FileChangedRO
			| FileChangedShellPost
			| FileChangedShell
			| FileEncoding
			| FileReadCmd
			| FileReadPost
			| FileReadPre
			| FileType
			| FileWriteCmd
			| FileWritePost
			| FileWritePre
			| FilterReadPost
			| FilterReadPre
			| FilterWritePost
			| FilterWritePre
			| FocusGained
			| FocusLost
			| FuncUndefined
			| GUIEnter
			| GUIFailed
			| InsertChange
			| InsertCharPre
			| InsertEnter
			| InsertLeavePre
			| InsertLeave
			| MenuPopup
			| OptionSet
			| QuickFixCmdPost
			| QuickFixCmdPre
			| QuitPre
			| RemoteReply
			| SafeStateAgain
			| SafeState
			| SessionLoadPost
			| ShellCmdPost
			| ShellFilterPost
			| SigUSR1
			| SourceCmd
			| SourcePost
			| SourcePre
			| SpellFileMissing
			| StdinReadPost
			| StdinReadPre
			| SwapExists
			| Syntax
			| TabClosed
			| TabEnter
			| TabLeave
			| TabNew
			| TermChanged
			| TermResponse
			| TerminalOpen
			| TerminalWinOpen
			| TextChangedI
			| TextChangedP
			| TextChanged
			| TextYankPost
			| User
			| VimEnter
			| VimLeavePre
			| VimLeave
			| VimResized
			| VimResume
			| VimSuspend
			| WinEnter
			| WinLeave
			| WinNew
			) \\b
		"""

	vimBehaveModel:
		name: "support.function.vimBehaveModel.viml"
		match: """(?x) \\b
			( mswin
			| xterm
			) \\b
		"""

	vimCommand:
		name: "support.function.command.viml"
		match: """(?x) \\b
			( abc
			| abclear
			| abo
			| aboveleft
			| ab
			| addd
			| all?
			| ar
			| args
			| arga
			| argadd
			| argd
			| argdelete
			| argdo
			| arge
			| argedit
			| argg
			| argglobal
			| argl
			| arglocal
			| argu
			| argument
			| as
			| ascii
			| au
			| a
			| bN
			| bNext
			| b
			| buffer
			| ba
			| ball
			| badd?
			| balt
			| bd
			| bdelete
			| bel
			| belowright
			| bf
			| bfirst
			| bl
			| blast
			| bm
			| bmodified
			| bn
			| bnext
			| bo
			| botright
			| bp
			| bprevious
			| br
			| brewind
			| break?
			| breaka
			| breakadd
			| breakd
			| breakdel
			| breakl
			| breaklist
			| bro
			| browse
			| bufdo
			| buffers
			| bun
			| bunload
			| bw
			| bwipeout
			| cN
			| cNext
			| cNf
			| cNfile
			| c
			| change
			| cabc
			| cabclear
			| cabo
			| cabove
			| cad
			| caddbuffer
			| cadde
			| caddexpr
			| caddf
			| caddfile
			| caf
			| cafter
			| call?
			| cat
			| catch
			| ca
			| cb
			| cbuffer
			| cbe
			| cbefore
			| cbel
			| cbelow
			| cbo
			| cbottom
			| ccl
			| cclose
			| cc
			| cdo
			| cd
			| ce
			| center
			| cex
			| cexpr
			| cf
			| cfile
			| cfdo
			| cfir
			| cfirst
			| cg
			| cgetfile
			| cgetb
			| cgetbuffer
			| cgete
			| cgetexpr
			| changes
			| chd
			| chdir
			| che
			| checkpath
			| checkt
			| checktime
			| chi
			| chistory
			| cl
			| clist
			| cla
			| clast
			| class
			| cle
			| clearjumps
			| clo
			| close
			| cmapc
			| cmapclear
			| cn
			| cnext
			| cnew
			| cnewer
			| cnf
			| cnfile
			| cnor
			| co
			| copy
			| col
			| colder
			| colo
			| colorscheme
			| comc
			| comclear
			| comp
			| compiler
			| com
			| con
			| continue
			| conf
			| confirm
			| const?
			| copen?
			| cp
			| cprevious
			| cpf
			| cpfile
			| cq
			| cquit
			| cr
			| crewind
			| cscope
			| cstag
			| cs
			| cuna
			| cunabbrev
			| cun
			| cw
			| cwindow
			| d
			| delete
			| debugg
			| debuggreedy
			| debug
			| defc
			| defcompile
			| def
			| delc
			| delcommand
			| delel
			| delep
			| deletel
			| deletep
			| deletl
			| deletp
			| delf
			| delfunction
			| dell
			| delm
			| delmarks
			| delp
			| dep
			| di
			| display
			| dif
			| diffupdate
			| diffg
			| diffget
			| diffo
			| diffoff
			| diffp
			| diffpatch
			| diffput?
			| diffs
			| diffsplit
			| difft
			| diffthis
			| dig
			| digraphs
			| dir
			| disa
			| disassemble
			| dj
			| djump
			| dli
			| dlist
			| dl
			| doaut
			| doau
			| do
			| dp
			| dr
			| drop
			| ds
			| dsearch
			| dsp
			| dsplit
			| e
			| edit
			| earlier
			| ea
			| echoc
			| echoconsole
			| echoe
			| echoerr
			| echom
			| echomsg
			| echon
			| ec
			| el
			| else
			| elseif?
			| em
			| emenu
			| en
			| endif
			| enddef
			| endf
			| endfunction
			| endfor?
			| endt
			| endtry
			| endw
			| endwhile
			| enew?
			| eval
			| exit?
			| export
			| exp
			| exu
			| exusage
			| ex
			| f
			| file
			| files
			| filetype
			| filet
			| filt
			| filter
			| find?
			| fina
			| finally
			| fini
			| finish
			| fir
			| first
			| fix
			| fixdel
			| fo
			| fold
			| foldc
			| foldclose
			| foldd
			| folddoopen
			| folddoc
			| folddoclosed
			| foldo
			| foldopen
			| for
			| fu
			| function
			| go
			| goto
			| gr
			| grep
			| grepa
			| grepadd
			| gui
			| gvim
			| g
			| h
			| help
			| ha
			| hardcopy
			| helpc
			| helpclose
			| helpf
			| helpfind
			| helpg
			| helpgrep
			| helpt
			| helptags
			| hide?
			| his
			| history
			| hi
			| iabc
			| iabclear
			| ia
			| if
			| ij
			| ijump
			| il
			| ilist
			| imapc
			| imapclear
			| import
			| imp
			| inor
			| interface
			| intro
			| in
			| is
			| isearch
			| isp
			| isplit
			| iuna
			| iunabbrev
			| i
			| j
			| join
			| ju
			| jumps
			| kee
			| keepmarks
			| keepalt
			| keepa
			| keepj
			| keepjumps
			| keepp
			| keeppatterns
			| k
			| lN
			| lNext
			| lNf
			| lNfile
			| l
			| list
			| la
			| last
			| lab
			| labove
			| lad
			| laddexpr
			| laddb
			| laddbuffer
			| laddf
			| laddfile
			| laf
			| lafter
			| lan
			| language
			| later
			| lat
			| lb
			| lbuffer
			| lbe
			| lbefore
			| lbel
			| lbelow
			| lbo
			| lbottom
			| lcd?
			| lch
			| lchdir
			| lcl
			| lclose
			| lcscope
			| lcs
			| ldo?
			| le
			| left
			| lefta
			| leftabove
			| leg
			| legacy
			| lex
			| lexpr
			| lf
			| lfile
			| lfdo
			| lfir
			| lfirst
			| lg
			| lgetfile
			| lgetb
			| lgetbuffer
			| lgete
			| lgetexpr
			| lgr
			| lgrep
			| lgrepa
			| lgrepadd
			| lh
			| lhelpgrep
			| lhi
			| lhistory
			| lla
			| llast
			| lli
			| llist
			| ll
			| lmake?
			| lmapc
			| lmapclear
			| lma
			| lne
			| lnext
			| lnew
			| lnewer
			| lnf
			| lnfile
			| lo
			| loadview
			| loadkeymap
			| loadk
			| loc
			| lockmarks
			| lockv
			| lockvar
			| lol
			| lolder
			| lop
			| lopen
			| lp
			| lprevious
			| lpf
			| lpfile
			| lr
			| lrewind
			| ls
			| lt
			| ltag
			| luado
			| luafile
			| lua
			| lv
			| lvimgrep
			| lvimgrepa
			| lvimgrepadd
			| lw
			| lwindow
			| m
			| move
			| ma
			| mark
			| make?
			| marks
			| mat
			| match
			| menut
			| menutranslate
			| mes
			| messages
			| mk
			| mkexrc
			| mks
			| mksession
			| mksp
			| mkspell
			| mkv
			| mkvimrc
			| mkview?
			| mode?
			| mz
			| mzscheme
			| mzf
			| mzfile
			| n
			| next
			| nb
			| nbkey
			| nbc
			| nbclose
			| nbs
			| nbstart
			| new
			| nmapc
			| nmapclear
			| noautocmd
			| noa
			| noh
			| nohlsearch
			| nore
			| nor
			| nos
			| noswapfile
			| nu
			| number
			| o
			| open
			| ol
			| oldfiles
			| omapc
			| omapclear
			| on
			| only
			| opt
			| options
			| ownsyntax
			| p
			| print
			| pa
			| packadd
			| packl
			| packloadall
			| pc
			| pclose
			| pe
			| perl
			| ped
			| pedit
			| perldo?
			| pop?
			| popup?
			| pp
			| ppop
			| pre
			| preserve
			| prev
			| previous
			| prof
			| profile
			| profd
			| profdel
			| promptf
			| promptfind
			| promptr
			| promptrepl
			| pro
			| ps
			| psearch
			| ptN
			| ptNext
			| ptag?
			| ptf
			| ptfirst
			| ptj
			| ptjump
			| ptl
			| ptlast
			| ptn
			| ptnext
			| ptp
			| ptprevious
			| ptr
			| ptrewind
			| pts
			| ptselect
			| put?
			| pwd?
			| py3do
			| py3f
			| py3file
			| py3
			| py
			| python
			| pydo
			| pyf
			| pyfile
			| python3
			| pythonx
			| pyxdo
			| pyxfile
			| pyx
			| q
			| quit
			| qa
			| qall
			| quita
			| quitall
			| r
			| read
			| rec
			| recover
			| redo?
			| redir?
			| redr
			| redraw
			| redraws
			| redrawstatus
			| redrawt
			| redrawtabline
			| reg
			| registers
			| res
			| resize
			| ret
			| retab
			| retu
			| return
			| rew
			| rewind
			| ri
			| right
			| rightb
			| rightbelow
			| ru
			| runtime
			| ruby?
			| rubydo?
			| rubyf
			| rubyfile
			| rundo
			| rv
			| rviminfo
			| sIc
			| sIe
			| sIg
			| sIl
			| sIn
			| sIp
			| sIr
			| sI
			| sN
			| sNext
			| sa
			| sargument
			| sall?
			| san
			| sandbox
			| sav
			| saveas
			| sbN
			| sbNext
			| sb
			| sbuffer
			| sba
			| sball
			| sbf
			| sbfirst
			| sbl
			| sblast
			| sbm
			| sbmodified
			| sbn
			| sbnext
			| sbp
			| sbprevious
			| sbr
			| sbrewind
			| scI
			| sce
			| scg
			| sci
			| scl
			| scp
			| scr
			| scriptnames
			| scripte
			| scriptencoding
			| scriptv
			| scriptversion
			| scscope
			| scs
			| sc
			| set?
			| setf
			| setfiletype
			| setg
			| setglobal
			| setl
			| setlocal
			| sf
			| sfind
			| sfir
			| sfirst
			| sgI
			| sgc
			| sge
			| sgi
			| sgl
			| sgn
			| sgp
			| sgr
			| sg
			| sh
			| shell
			| sic
			| sie
			| sign
			| sig
			| sil
			| silent
			| sim
			| simalt
			| sin
			| sip
			| sir
			| si
			| sl
			| sleep
			| sla
			| slast
			| sm
			| smagic
			| sm
			| smap
			| smenu
			| sme
			| smile
			| sn
			| snext
			| sno
			| snomagic
			| snoremenu
			| snoreme
			| so
			| source
			| sort?
			| sp
			| split
			| spe
			| spellgood
			| spelld
			| spelldump
			| spelli
			| spellinfo
			| spellr
			| spellrare
			| spellr
			| spellrepall
			| spellr
			| spellrrare
			| spellu
			| spellundo
			| spellw
			| spellwrong
			| spr
			| sprevious
			| srI
			| src
			| sre
			| srewind
			| srg
			| sri
			| srl
			| srn
			| srp
			| sr
			| st
			| stop
			| stag?
			| star
			| startinsert
			| startg
			| startgreplace
			| startr
			| startreplace
			| stj
			| stjump
			| stopi
			| stopinsert
			| sts
			| stselect
			| substitutepattern
			| substituterepeat
			| sun
			| sunhide
			| sunmenu
			| sunme
			| sus
			| suspend
			| sv
			| sview
			| sw
			| swapname
			| syncbind
			| sync
			| syntime
			| syn
			| sy
			| tN
			| tNext
			| tag?
			| tabN
			| tabNext
			| tabc
			| tabclose
			| tabdo?
			| tabe
			| tabedit
			| tabf
			| tabfind
			| tabfir
			| tabfirst
			| tabl
			| tablast
			| tabm
			| tabmove
			| tabn
			| tabnext
			| tabnew
			| tabo
			| tabonly
			| tabp
			| tabprevious
			| tabr
			| tabrewind
			| tabs
			| tab
			| tags
			| tcl?
			| tcd
			| tch
			| tchdir
			| tcldo?
			| tclf
			| tclfile
			| te
			| tearoff
			| ter
			| terminal
			| tf
			| tfirst
			| th
			| throw
			| tj
			| tjump
			| tl
			| tlast
			| tlmenu
			| tlm
			| tlnoremenu
			| tln
			| tlunmenu
			| tlu
			| tm
			| tmenu
			| tmap?
			| tmapc
			| tmapclear
			| tn
			| tnext
			| tno
			| tnoremap
			| to
			| topleft
			| tp
			| tprevious
			| tr
			| trewind
			| try
			| ts
			| tselect
			| tu
			| tunmenu
			| tunmap?
			| type
			| t
			| u
			| undo
			| una
			| unabbreviate
			| undoj
			| undojoin
			| undol
			| undolist
			| unh
			| unhide
			| unlo
			| unlockvar
			| unl
			| uns
			| unsilent
			| up
			| update
			| var
			| ve
			| version
			| verb
			| verbose
			| vert
			| vertical
			| vi
			| visual
			| view?
			| vim9
			| vim9cmd
			| vim9s
			| vim9script
			| vim
			| vimgrep
			| vimgrepa
			| vimgrepadd
			| viu
			| viusage
			| vmapc
			| vmapclear
			| vnew?
			| vs
			| vsplit
			| v
			| wN
			| wNext
			| w
			| write
			| wa
			| wall
			| wh
			| while
			| win
			| winsize
			| winc
			| wincmd
			| windo
			| winp
			| winpos
			| wn
			| wnext
			| wp
			| wprevious
			| wqa
			| wqall
			| wq
			| wundo
			| wv
			| wviminfo
			| x
			| xit
			| xa
			| xall
			| xmapc
			| xmapclear
			| xmenu
			| xme
			| xnoremenu
			| xnoreme
			| xprop
			| xr
			| xrestore
			| xunmenu
			| xunme
			| xwininfo
			| y
			| yank
			) \\b
		"""

	vimErrSetting:
		name: "invalid.deprecated.legacy-setting.viml"
		match: """(?x) \\b
			( autoprint
			| beautify
			| bioskey
			| biosk
			| conskey
			| consk
			| flash
			| graphic
			| hardtabs
			| ht
			| mesg
			| noautoprint
			| nobeautify
			| nobioskey
			| nobiosk
			| noconskey
			| noconsk
			| noflash
			| nographic
			| nohardtabs
			| nomesg
			| nonovice
			| noopen
			| nooptimize
			| noop
			| noredraw
			| noslowopen
			| noslow
			| nosourceany
			| novice
			| now1200
			| now300
			| now9600
			| open
			| optimize
			| op
			| redraw
			| slowopen
			| slow
			| sourceany
			| w1200
			| w300
			| w9600
			) \\b
		"""

	vimFTCmd:
		name: "support.function.vimFTCmd.viml"
		match: """(?x) \\b
			( filet
			| filetype
			) \\b
		"""

	vimFTOption:
		name: "support.function.vimFTOption.viml"
		match: """(?x) \\b
			( detect
			| indent
			| off
			| on
			| plugin
			) \\b
		"""

	vimFgBgAttrib:
		name: "support.constant.attribute.viml"
		match: """(?x) \\b
			( background
			| bg
			| fg
			| foreground
			| none
			) \\b
		"""

	vimFuncKey:
		name: "support.function.vimFuncKey.viml"
		match: """(?x) \\b
			( def
			| fu
			| function
			) \\b
		"""

	vimFuncName:
		name: "support.function.viml"
		match: """(?x) \\b
			( abs
			| acos
			| add
			| and
			| appendbufline
			| append
			| argc
			| argidx
			| arglistid
			| argv
			| asin
			| assert_beeps
			| assert_equalfile
			| assert_equal
			| assert_exception
			| assert_fails
			| assert_false
			| assert_inrange
			| assert_match
			| assert_nobeep
			| assert_notequal
			| assert_notmatch
			| assert_report
			| assert_true
			| atan2
			| atan
			| balloon_gettext
			| balloon_show
			| balloon_split
			| browsedir
			| browse
			| bufadd
			| bufexists
			| buflisted
			| bufloaded
			| bufload
			| bufname
			| bufnr
			| bufwinid
			| bufwinnr
			| byte2line
			| byteidxcomp
			| byteidx
			| call
			| ceil
			| ch_canread
			| ch_close_in
			| ch_close
			| ch_evalexpr
			| ch_evalraw
			| ch_getbufnr
			| ch_getjob
			| ch_info
			| ch_logfile
			| ch_log
			| ch_open
			| ch_readblob
			| ch_readraw
			| ch_read
			| ch_sendexpr
			| ch_sendraw
			| ch_setoptions
			| ch_status
			| changenr
			| char2nr
			| charclass
			| charcol
			| charidx
			| chdir
			| cindent
			| clearmatches
			| col
			| complete_add
			| complete_check
			| complete_info
			| complete
			| confirm
			| copy
			| cosh
			| cos
			| count
			| cscope_connection
			| cursor
			| debugbreak
			| deepcopy
			| deletebufline
			| delete
			| did_filetype
			| diff_filler
			| diff_hlID
			| echoraw
			| empty
			| environ
			| escape
			| eval
			| eventhandler
			| executable
			| execute
			| exepath
			| exists
			| expandcmd
			| expand
			| exp
			| extendnew
			| extend
			| feedkeys
			| filereadable
			| filewritable
			| filter
			| finddir
			| findfile
			| flattennew
			| flatten
			| float2nr
			| floor
			| fmod
			| fnameescape
			| fnamemodify
			| foldclosedend
			| foldclosed
			| foldlevel
			| foldtextresult
			| foldtext
			| foreground
			| fullcommand
			| funcref
			| function
			| garbagecollect
			| getbufinfo
			| getbufline
			| getbufvar
			| getchangelist
			| getcharmod
			| getcharpos
			| getcharsearch
			| getchar
			| getcmdline
			| getcmdpos
			| getcmdtype
			| getcmdwintype
			| getcompletion
			| getcurpos
			| getcursorcharpos
			| getcwd
			| getenv
			| getfontname
			| getfperm
			| getfsize
			| getftime
			| getftype
			| getimstatus
			| getjumplist
			| getline
			| getloclist
			| getmarklist
			| getmatches
			| getmousepos
			| getpid
			| getpos
			| getqflist
			| getreginfo
			| getregtype
			| getreg
			| gettabinfo
			| gettabvar
			| gettabwinvar
			| gettagstack
			| gettext
			| getwininfo
			| getwinposx
			| getwinposy
			| getwinpos
			| getwinvar
			| get
			| glob2regpat
			| globpath
			| glob
			| has_key
			| haslocaldir
			| hasmapto
			| has
			| histadd
			| histdel
			| histget
			| histnr
			| hlID
			| hlexists
			| hostname
			| iconv
			| indent
			| index
			| inputdialog
			| inputlist
			| inputrestore
			| inputsave
			| inputsecret
			| input
			| insert
			| interrupt
			| invert
			| isdirectory
			| isinf
			| islocked
			| isnan
			| items
			| job_getchannel
			| job_info
			| job_setoptions
			| job_start
			| job_status
			| job_stop
			| join
			| js_decode
			| js_encode
			| json_decode
			| json_encode
			| keys
			| len
			| libcallnr
			| libcall
			| line2byte
			| line
			| lispindent
			| list2str
			| listener_add
			| listener_flush
			| listener_remove
			| localtime
			| log10
			| log
			| luaeval
			| maparg
			| mapcheck
			| mapnew
			| mapset
			| map
			| matchaddpos
			| matchadd
			| matcharg
			| matchdelete
			| matchend
			| matchfuzzypos
			| matchfuzzy
			| matchlist
			| matchstrpos
			| matchstr
			| match
			| max
			| menu_info
			| min
			| mkdir
			| mode
			| mzeval
			| nextnonblank
			| nr2char
			| or
			| pathshorten
			| perleval
			| popup_atcursor
			| popup_beval
			| popup_clear
			| popup_close
			| popup_create
			| popup_dialog
			| popup_filter_menu
			| popup_filter_yesno
			| popup_findinfo
			| popup_findpreview
			| popup_getoptions
			| popup_getpos
			| popup_hide
			| popup_list
			| popup_locate
			| popup_menu
			| popup_move
			| popup_notification
			| popup_setoptions
			| popup_settext
			| popup_show
			| pow
			| prevnonblank
			| printf
			| prompt_getprompt
			| prompt_setcallback
			| prompt_setinterrupt
			| prompt_setprompt
			| prop_add
			| prop_clear
			| prop_find
			| prop_list
			| prop_remove
			| prop_type_add
			| prop_type_change
			| prop_type_delete
			| prop_type_get
			| prop_type_list
			| pum_getpos
			| pumvisible
			| py3eval
			| pyeval
			| pyxeval
			| rand
			| range
			| readblob
			| readdirex
			| readdir
			| readfile
			| reduce
			| reg_executing
			| reg_recording
			| reltimefloat
			| reltimestr
			| reltime
			| remote_expr
			| remote_foreground
			| remote_peek
			| remote_read
			| remote_send
			| remote_startserver
			| remove
			| rename
			| repeat
			| resolve
			| reverse
			| round
			| rubyeval
			| screenattr
			| screenchars
			| screenchar
			| screencol
			| screenpos
			| screenrow
			| screenstring
			| searchcount
			| searchdecl
			| searchpairpos
			| searchpair
			| searchpos
			| search
			| server2client
			| serverlist
			| setbufline
			| setbufvar
			| setcellwidths
			| setcharpos
			| setcharsearch
			| setcmdpos
			| setcursorcharpos
			| setenv
			| setfperm
			| setline
			| setloclist
			| setmatches
			| setpos
			| setqflist
			| setreg
			| settabvar
			| settabwinvar
			| settagstack
			| setwinvar
			| sha256
			| shellescape
			| shiftwidth
			| sign_define
			| sign_getdefined
			| sign_getplaced
			| sign_jump
			| sign_placelist
			| sign_place
			| sign_undefine
			| sign_unplacelist
			| sign_unplace
			| simplify
			| sinh
			| sin
			| slice
			| sort
			| sound_clear
			| sound_playevent
			| sound_playfile
			| sound_stop
			| soundfold
			| spellbadword
			| spellsuggest
			| split
			| sqrt
			| srand
			| state
			| str2float
			| str2list
			| str2nr
			| strcharlen
			| strcharpart
			| strchars
			| strdisplaywidth
			| strftime
			| strgetchar
			| stridx
			| string
			| strlen
			| strpart
			| strptime
			| strridx
			| strtrans
			| strwidth
			| submatch
			| substitute
			| swapinfo
			| swapname
			| synIDattr
			| synIDtrans
			| synID
			| synconcealed
			| synstack
			| systemlist
			| system
			| tabpagebuflist
			| tabpagenr
			| tabpagewinnr
			| tagfiles
			| taglist
			| tanh
			| tan
			| tempname
			| term_dumpdiff
			| term_dumpload
			| term_dumpwrite
			| term_getaltscreen
			| term_getansicolors
			| term_getattr
			| term_getcursor
			| term_getjob
			| term_getline
			| term_getscrolled
			| term_getsize
			| term_getstatus
			| term_gettitle
			| term_gettty
			| term_list
			| term_scrape
			| term_sendkeys
			| term_setansicolors
			| term_setapi
			| term_setkill
			| term_setrestore
			| term_setsize
			| term_start
			| term_wait
			| terminalprops
			| test_alloc_fail
			| test_autochdir
			| test_feedinput
			| test_garbagecollect_now
			| test_garbagecollect_soon
			| test_getvalue
			| test_ignore_error
			| test_null_blob
			| test_null_channel
			| test_null_dict
			| test_null_function
			| test_null_job
			| test_null_list
			| test_null_partial
			| test_null_string
			| test_option_not_set
			| test_override
			| test_refcount
			| test_scrollbar
			| test_setmouse
			| test_settime
			| test_srand_seed
			| test_unknown
			| test_void
			| timer_info
			| timer_pause
			| timer_start
			| timer_stopall
			| timer_stop
			| tolower
			| toupper
			| trim
			| trunc
			| tr
			| typename
			| type
			| undofile
			| undotree
			| uniq
			| values
			| virtcol
			| visualmode
			| wildmenumode
			| win_execute
			| win_findbuf
			| win_getid
			| win_gettype
			| win_gotoid
			| win_id2tabwin
			| win_id2win
			| win_screenpos
			| win_splitmove
			| winbufnr
			| wincol
			| windowsversion
			| winheight
			| winlayout
			| winline
			| winnr
			| winrestcmd
			| winrestview
			| winsaveview
			| winwidth
			| wordcount
			| writefile
			| xor
			) \\b
		"""

	vimGroup:
		name: "support.type.group.viml"
		match: """(?xi) \\b
			( Boolean
			| Character
			| Comment
			| Conditional
			| Constant
			| Debug
			| Define
			| Delimiter
			| Error
			| Exception
			| Float
			| Function
			| Identifier
			| Ignore
			| Include
			| Keyword
			| Label
			| Macro
			| Number
			| Operator
			| PreCondit
			| PreProc
			| Repeat
			| SpecialChar
			| SpecialComment
			| Special
			| Statement
			| StorageClass
			| String
			| Structure
			| Tag
			| Todo
			| Typedef
			| Type
			| Underlined
			) \\b
		"""

	vimGroupSpecial:
		name: "support.function.vimGroupSpecial.viml"
		match: """(?x) \\b
			( ALLBUT
			| ALL
			| CONTAINED
			| TOP
			) \\b
		"""

	vimHLGroup:
		name: "support.type.highlight-group.viml"
		match: """(?xi) \\b
			( ColorColumn
			| CursorColumn
			| CursorIM
			| CursorLineNr
			| CursorLine
			| Cursor
			| DiffAdd
			| DiffChange
			| DiffDelete
			| DiffText
			| Directory
			| EndOfBuffer
			| ErrorMsg
			| FoldColumn
			| Folded
			| IncSearch
			| LineNrAbove
			| LineNrBelow
			| LineNr
			| MatchParen
			| Menu
			| ModeMsg
			| MoreMsg
			| NonText
			| Normal
			| PmenuSbar
			| PmenuSel
			| PmenuThumb
			| Pmenu
			| Question
			| QuickFixLine
			| Scrollbar
			| Search
			| SignColumn
			| SpecialKey
			| SpellBad
			| SpellCap
			| SpellLocal
			| SpellRare
			| StatusLineNC
			| StatusLineTerm
			| StatusLine
			| TabLineFill
			| TabLineSel
			| TabLine
			| Terminal
			| Title
			| Tooltip
			| VertSplit
			| VisualNOS
			| Visual
			| WarningMsg
			| WildMenu
			) \\b
		"""

	vimHiAttrib:
		name: "support.function.vimHiAttrib.viml"
		match: """(?x) \\b
			( bold
			| inverse
			| italic
			| nocombine
			| none
			| reverse
			| standout
			| strikethrough
			| undercurl
			| underline
			) \\b
		"""

	vimHiClear:
		name: "support.function.vimHiClear.viml"
		match: """(?x) \\b
			( clear
			) \\b
		"""

	vimHiCtermColor:
		name: "support.constant.colour.color.$1.viml"
		match: """(?x) \\b
			( black
			| blue
			| brown
			| cyan
			| darkblue
			| darkcyan
			| darkgray
			| darkgreen
			| darkgrey
			| darkmagenta
			| darkred
			| darkyellow
			| gray
			| green
			| grey40
			| grey50
			| grey90
			| grey
			| lightblue
			| lightcyan
			| lightgray
			| lightgreen
			| lightgrey
			| lightmagenta
			| lightred
			| lightyellow
			| magenta
			| red
			| seagreen
			| white
			| yellow
			) \\b
		"""

	vimMapModKey:
		name: "support.function.vimMapModKey.viml"
		match: """(?x) \\b
			( buffer
			| expr
			| leader
			| localleader
			| nowait
			| plug
			| script
			| sid
			| silent
			| unique
			) \\b
		"""

	vimOption:
		name: "support.variable.option.viml"
		match: """(?x) \\b
			( acd
			| ai
			| akm
			| aleph
			| allowrevins
			| altkeymap
			| al
			| ambiwidth
			| ambw
			| antialias
			| anti
			| arabicshape
			| arabic
			| arab
			| ari
			| arshape
			| ar
			| asd
			| autochdir
			| autoindent
			| autoread
			| autoshelldir
			| autowriteall
			| autowrite
			| awa
			| aw
			| background
			| backspace
			| backupcopy
			| backupdir
			| backupext
			| backupskip
			| backup
			| balloondelay
			| balloonevalterm
			| ballooneval
			| balloonexpr
			| bdir
			| bdlay
			| belloff
			| bevalterm
			| beval
			| bexpr
			| bex
			| bg
			| bh
			| binary
			| bin
			| bkc
			| bk
			| bl
			| bomb
			| bo
			| breakat
			| breakindentopt
			| breakindent
			| briopt
			| bri
			| brk
			| browsedir
			| bsdir
			| bsk
			| bs
			| bt
			| bufhidden
			| buflisted
			| buftype
			| casemap
			| cb
			| ccv
			| cc
			| cdpath
			| cd
			| cedit
			| cfu
			| cf
			| charconvert
			| ch
			| cindent
			| cinkeys
			| cink
			| cinoptions
			| cino
			| cinwords
			| cinw
			| cin
			| ci
			| clipboard
			| cmdheight
			| cmdwinheight
			| cmp
			| cms
			| cm
			| cocu
			| cole
			| colorcolumn
			| columns
			| commentstring
			| comments
			| compatible
			| completefunc
			| completeopt
			| completepopup
			| completeslash
			| complete
			| com
			| confirm
			| copyindent
			| cot
			| co
			| cpoptions
			| cpo
			| cpp
			| cpt
			| cp
			| crb
			| cryptmethod
			| cscopepathcomp
			| cscopeprg
			| cscopequickfix
			| cscoperelative
			| cscopetagorder
			| cscopetag
			| cscopeverbose
			| csl
			| cspc
			| csprg
			| csqf
			| csre
			| csto
			| cst
			| csverb
			| cuc
			| culopt
			| cul
			| cursorbind
			| cursorcolumn
			| cursorlineopt
			| cursorline
			| cursor
			| cwh
			| debug
			| deco
			| define
			| def
			| delcombine
			| dex
			| dg
			| dictionary
			| dict
			| diffexpr
			| diffopt
			| diff
			| digraph
			| dip
			| directory
			| dir
			| display
			| dy
			| eadirection
			| ead
			| ea
			| eb
			| edcompatible
			| ed
			| efm
			| ef
			| ei
			| ek
			| emoji
			| emo
			| encoding
			| enc
			| endofline
			| eol
			| ep
			| equalalways
			| equalprg
			| errorbells
			| errorfile
			| errorformat
			| esckeys
			| et
			| eventignore
			| expandtab
			| exrc
			| ex
			| fcl
			| fcs
			| fdc
			| fde
			| fdi
			| fdls
			| fdl
			| fdm
			| fdn
			| fdo
			| fdt
			| fencs
			| fenc
			| fen
			| fex
			| ffs
			| ff
			| fic
			| fileencodings
			| fileencoding
			| fileformats
			| fileformat
			| fileignorecase
			| filetype
			| fillchars
			| fixendofline
			| fixeol
			| fkmap
			| fk
			| flp
			| fml
			| fmr
			| foldclose
			| foldcolumn
			| foldenable
			| foldexpr
			| foldignore
			| foldlevelstart
			| foldlevel
			| foldmarker
			| foldmethod
			| foldminlines
			| foldnestmax
			| foldopen
			| foldtext
			| formatexpr
			| formatlistpat
			| formatoptions
			| formatprg
			| fo
			| fp
			| fsync
			| fs
			| ft
			| gcr
			| gdefault
			| gd
			| gfm
			| gfn
			| gfs
			| gfw
			| ghr
			| go
			| gp
			| grepformat
			| grepprg
			| gtl
			| gtt
			| guicursor
			| guifontset
			| guifontwide
			| guifont
			| guiheadroom
			| guioptions
			| guipty
			| guitablabel
			| guitabtooltip
			| helpfile
			| helpheight
			| helplang
			| hf
			| hh
			| hidden
			| hid
			| highlight
			| history
			| hi
			| hkmapp
			| hkmap
			| hkp
			| hk
			| hlg
			| hlsearch
			| hls
			| hl
			| iconstring
			| icon
			| ic
			| ignorecase
			| imactivatefunc
			| imactivatekey
			| imaf
			| imak
			| imcmdline
			| imc
			| imdisable
			| imd
			| iminsert
			| imi
			| imsearch
			| imsf
			| imstatusfunc
			| imstyle
			| imst
			| ims
			| im
			| includeexpr
			| include
			| incsearch
			| inc
			| indentexpr
			| indentkeys
			| inde
			| indk
			| inex
			| infercase
			| inf
			| insertmode
			| invacd
			| invai
			| invakm
			| invallowrevins
			| invaltkeymap
			| invantialias
			| invanti
			| invarabicshape
			| invarabic
			| invarab
			| invari
			| invarshape
			| invar
			| invasd
			| invautochdir
			| invautoindent
			| invautoread
			| invautoshelldir
			| invautowriteall
			| invautowrite
			| invawa
			| invaw
			| invbackup
			| invballoonevalterm
			| invballooneval
			| invbevalterm
			| invbeval
			| invbinary
			| invbin
			| invbk
			| invbl
			| invbomb
			| invbreakindent
			| invbri
			| invbuflisted
			| invcf
			| invcindent
			| invcin
			| invci
			| invcompatible
			| invconfirm
			| invcopyindent
			| invcp
			| invcrb
			| invcscoperelative
			| invcscopetag
			| invcscopeverbose
			| invcsre
			| invcst
			| invcsverb
			| invcuc
			| invcul
			| invcursorbind
			| invcursorcolumn
			| invcursorline
			| invdeco
			| invdelcombine
			| invdg
			| invdiff
			| invdigraph
			| invea
			| inveb
			| invedcompatible
			| inved
			| invek
			| invemoji
			| invemo
			| invendofline
			| inveol
			| invequalalways
			| inverrorbells
			| invesckeys
			| invet
			| invexpandtab
			| invexrc
			| invex
			| invfen
			| invfic
			| invfileignorecase
			| invfixendofline
			| invfixeol
			| invfkmap
			| invfk
			| invfoldenable
			| invfsync
			| invfs
			| invgdefault
			| invgd
			| invguipty
			| invhidden
			| invhid
			| invhkmapp
			| invhkmap
			| invhkp
			| invhk
			| invhlsearch
			| invhls
			| invicon
			| invic
			| invignorecase
			| invimcmdline
			| invimc
			| invimdisable
			| invimd
			| invim
			| invincsearch
			| invinfercase
			| invinf
			| invinsertmode
			| invis
			| invjoinspaces
			| invjs
			| invlangnoremap
			| invlangremap
			| invlazyredraw
			| invlbr
			| invlinebreak
			| invlisp
			| invlist
			| invlnr
			| invloadplugins
			| invlpl
			| invlrm
			| invlz
			| invmacatsui
			| invmagic
			| invma
			| invmh
			| invmle
			| invml
			| invmodelineexpr
			| invmodeline
			| invmodifiable
			| invmodified
			| invmod
			| invmore
			| invmousefocus
			| invmousef
			| invmousehide
			| invnumber
			| invnu
			| invodev
			| invopendevice
			| invpaste
			| invpi
			| invpreserveindent
			| invpreviewwindow
			| invprompt
			| invpvw
			| invreadonly
			| invrelativenumber
			| invremap
			| invrestorescreen
			| invrevins
			| invrightleft
			| invri
			| invrl
			| invrnu
			| invro
			| invrs
			| invruler
			| invru
			| invsb
			| invscb
			| invscf
			| invscrollbind
			| invscrollfocus
			| invscs
			| invsc
			| invsecure
			| invsft
			| invshellslash
			| invshelltemp
			| invshiftround
			| invshortname
			| invshowcmd
			| invshowfulltag
			| invshowmatch
			| invshowmode
			| invsi
			| invsmartcase
			| invsmartindent
			| invsmarttab
			| invsmd
			| invsm
			| invsn
			| invsol
			| invspell
			| invsplitbelow
			| invsplitright
			| invspr
			| invsr
			| invssl
			| invstartofline
			| invsta
			| invstmp
			| invswapfile
			| invswf
			| invtagbsearch
			| invtagrelative
			| invtagstack
			| invta
			| invtbidi
			| invtbi
			| invtbs
			| invtermbidi
			| invterse
			| invtextauto
			| invtextmode
			| invtf
			| invtgst
			| invtildeop
			| invtimeout
			| invtitle
			| invtop
			| invto
			| invtr
			| invttimeout
			| invttybuiltin
			| invttyfast
			| invtx
			| invudf
			| invundofile
			| invvb
			| invvisualbell
			| invwarn
			| invwa
			| invwb
			| invweirdinvert
			| invwfh
			| invwfw
			| invwic
			| invwildignorecase
			| invwildmenu
			| invwinfixheight
			| invwinfixwidth
			| invwiv
			| invwmnu
			| invwrapscan
			| invwrap
			| invwriteany
			| invwritebackup
			| invwrite
			| invws
			| isfname
			| isf
			| isident
			| isi
			| iskeyword
			| isk
			| isprint
			| isp
			| is
			| joinspaces
			| js
			| keymap
			| keymodel
			| keywordprg
			| key
			| kmp
			| km
			| kp
			| langmap
			| langmenu
			| langnoremap
			| langremap
			| laststatus
			| lazyredraw
			| lbr
			| lcs
			| level
			| linebreak
			| linespace
			| lines
			| lispwords
			| lisp
			| listchars
			| list
			| lmap
			| lm
			| lnr
			| loadplugins
			| lpl
			| lrm
			| lsp
			| ls
			| luadll
			| lw
			| lz
			| macatsui
			| magic
			| makeef
			| makeencoding
			| makeprg
			| matchpairs
			| matchtime
			| mat
			| maxcombine
			| maxfuncdepth
			| maxmapdepth
			| maxmempattern
			| maxmemtot
			| maxmem
			| ma
			| mco
			| mef
			| menc
			| menuitems
			| mfd
			| mh
			| mis
			| mkspellmem
			| mle
			| mls
			| ml
			| mmd
			| mmp
			| mmt
			| mm
			| modelineexpr
			| modelines
			| modeline
			| modifiable
			| modified
			| mod
			| more
			| mousefocus
			| mousef
			| mousehide
			| mousemodel
			| mousem
			| mouseshape
			| mouses
			| mousetime
			| mouset
			| mouse
			| mps
			| mp
			| msm
			| mzquantum
			| mzq
			| mzschemedll
			| mzschemegcdll
			| nf
			| noacd
			| noai
			| noakm
			| noallowrevins
			| noaltkeymap
			| noantialias
			| noanti
			| noarabicshape
			| noarabic
			| noarab
			| noari
			| noarshape
			| noar
			| noasd
			| noautochdir
			| noautoindent
			| noautoread
			| noautoshelldir
			| noautowriteall
			| noautowrite
			| noawa
			| noaw
			| nobackup
			| noballoonevalterm
			| noballooneval
			| nobevalterm
			| nobeval
			| nobinary
			| nobin
			| nobk
			| nobl
			| nobomb
			| nobreakindent
			| nobri
			| nobuflisted
			| nocf
			| nocindent
			| nocin
			| noci
			| nocompatible
			| noconfirm
			| nocopyindent
			| nocp
			| nocrb
			| nocscoperelative
			| nocscopetag
			| nocscopeverbose
			| nocsre
			| nocst
			| nocsverb
			| nocuc
			| nocul
			| nocursorbind
			| nocursorcolumn
			| nocursorline
			| nodeco
			| nodelcombine
			| nodg
			| nodiff
			| nodigraph
			| noea
			| noeb
			| noedcompatible
			| noed
			| noek
			| noemoji
			| noemo
			| noendofline
			| noeol
			| noequalalways
			| noerrorbells
			| noesckeys
			| noet
			| noexpandtab
			| noexrc
			| noex
			| nofen
			| nofic
			| nofileignorecase
			| nofixendofline
			| nofixeol
			| nofkmap
			| nofk
			| nofoldenable
			| nofsync
			| nofs
			| nogdefault
			| nogd
			| noguipty
			| nohidden
			| nohid
			| nohkmapp
			| nohkmap
			| nohkp
			| nohk
			| nohlsearch
			| nohls
			| noicon
			| noic
			| noignorecase
			| noimcmdline
			| noimc
			| noimdisable
			| noimd
			| noim
			| noincsearch
			| noinfercase
			| noinf
			| noinsertmode
			| nois
			| nojoinspaces
			| nojs
			| nolangnoremap
			| nolangremap
			| nolazyredraw
			| nolbr
			| nolinebreak
			| nolisp
			| nolist
			| nolnr
			| noloadplugins
			| nolpl
			| nolrm
			| nolz
			| nomacatsui
			| nomagic
			| noma
			| nomh
			| nomle
			| noml
			| nomodelineexpr
			| nomodeline
			| nomodifiable
			| nomodified
			| nomod
			| nomore
			| nomousefocus
			| nomousef
			| nomousehide
			| nonumber
			| nonu
			| noodev
			| noopendevice
			| nopaste
			| nopi
			| nopreserveindent
			| nopreviewwindow
			| noprompt
			| nopvw
			| noreadonly
			| norelativenumber
			| noremap
			| norestorescreen
			| norevins
			| norightleft
			| nori
			| norl
			| nornu
			| noro
			| nors
			| noruler
			| noru
			| nosb
			| noscb
			| noscf
			| noscrollbind
			| noscrollfocus
			| noscs
			| nosc
			| nosecure
			| nosft
			| noshellslash
			| noshelltemp
			| noshiftround
			| noshortname
			| noshowcmd
			| noshowfulltag
			| noshowmatch
			| noshowmode
			| nosi
			| nosmartcase
			| nosmartindent
			| nosmarttab
			| nosmd
			| nosm
			| nosn
			| nosol
			| nospell
			| nosplitbelow
			| nosplitright
			| nospr
			| nosr
			| nossl
			| nostartofline
			| nosta
			| nostmp
			| noswapfile
			| noswf
			| notagbsearch
			| notagrelative
			| notagstack
			| nota
			| notbidi
			| notbi
			| notbs
			| notermbidi
			| noterse
			| notextauto
			| notextmode
			| notf
			| notgst
			| notildeop
			| notimeout
			| notitle
			| notop
			| noto
			| notr
			| nottimeout
			| nottybuiltin
			| nottyfast
			| notx
			| noudf
			| noundofile
			| novb
			| novisualbell
			| nowarn
			| nowa
			| nowb
			| noweirdinvert
			| nowfh
			| nowfw
			| nowic
			| nowildignorecase
			| nowildmenu
			| nowinfixheight
			| nowinfixwidth
			| nowiv
			| nowmnu
			| nowrapscan
			| nowrap
			| nowriteany
			| nowritebackup
			| nowrite
			| nows
			| nrformats
			| numberwidth
			| number
			| nuw
			| nu
			| odev
			| oft
			| ofu
			| omnifunc
			| opendevice
			| operatorfunc
			| opfunc
			| osfiletype
			| packpath
			| paragraphs
			| para
			| pastetoggle
			| paste
			| patchexpr
			| patchmode
			| path
			| pa
			| pdev
			| penc
			| perldll
			| pexpr
			| pex
			| pfn
			| pheader
			| ph
			| pi
			| pmbcs
			| pmbfn
			| pm
			| popt
			| pp
			| preserveindent
			| previewheight
			| previewpopup
			| previewwindow
			| printdevice
			| printencoding
			| printexpr
			| printfont
			| printheader
			| printmbcharset
			| printmbfont
			| printoptions
			| prompt
			| pt
			| pumheight
			| pumwidth
			| pvh
			| pvp
			| pvw
			| pw
			| pythondll
			| pythonhome
			| pythonthreedll
			| pythonthreehome
			| pyxversion
			| pyx
			| qe
			| qftf
			| quickfixtextfunc
			| quoteescape
			| rdt
			| readonly
			| redrawtime
			| regexpengine
			| relativenumber
			| remap
			| renderoptions
			| report
			| restorescreen
			| revins
			| re
			| rightleftcmd
			| rightleft
			| ri
			| rlc
			| rl
			| rnu
			| rop
			| ro
			| rs
			| rtp
			| rubydll
			| ruf
			| rulerformat
			| ruler
			| runtimepath
			| ru
			| sbo
			| sbr
			| sb
			| scb
			| scf
			| scl
			| scrollbind
			| scrollfocus
			| scrolljump
			| scrolloff
			| scrollopt
			| scroll
			| scr
			| scs
			| sc
			| sections
			| sect
			| secure
			| selection
			| selectmode
			| sel
			| sessionoptions
			| sft
			| shcf
			| shellcmdflag
			| shellpipe
			| shellquote
			| shellredir
			| shellslash
			| shelltemp
			| shelltype
			| shellxescape
			| shellxquote
			| shell
			| shiftround
			| shiftwidth
			| shm
			| shortmess
			| shortname
			| showbreak
			| showcmd
			| showfulltag
			| showmatch
			| showmode
			| showtabline
			| shq
			| sh
			| sidescrolloff
			| sidescroll
			| signcolumn
			| siso
			| si
			| sj
			| slm
			| smartcase
			| smartindent
			| smarttab
			| smc
			| smd
			| sm
			| sn
			| softtabstop
			| sol
			| so
			| spc
			| spellcapcheck
			| spellfile
			| spelllang
			| spelloptions
			| spellsuggest
			| spell
			| spf
			| splitbelow
			| splitright
			| spl
			| spo
			| spr
			| sps
			| sp
			| srr
			| sr
			| ssl
			| ssop
			| ss
			| stal
			| startofline
			| statusline
			| sta
			| stl
			| stmp
			| sts
			| st
			| sua
			| suffixesadd
			| suffixes
			| su
			| swapfile
			| swapsync
			| swb
			| swf
			| switchbuf
			| sws
			| sw
			| sxe
			| sxq
			| synmaxcol
			| syntax
			| syn
			| t_8b
			| t_8f
			| t_8u
			| t_AB
			| t_AF
			| t_AL
			| t_AU
			| t_BD
			| t_BE
			| t_CS
			| t_CV
			| t_Ce
			| t_Co
			| t_Cs
			| t_DL
			| t_EC
			| t_EI
			| t_F1
			| t_F2
			| t_F3
			| t_F4
			| t_F5
			| t_F6
			| t_F7
			| t_F8
			| t_F9
			| t_GP
			| t_IE
			| t_IS
			| t_K1
			| t_K3
			| t_K4
			| t_K5
			| t_K6
			| t_K7
			| t_K8
			| t_K9
			| t_KA
			| t_KB
			| t_KC
			| t_KD
			| t_KE
			| t_KF
			| t_KG
			| t_KH
			| t_KI
			| t_KJ
			| t_KK
			| t_KL
			| t_PE
			| t_PS
			| t_RB
			| t_RC
			| t_RF
			| t_RI
			| t_RS
			| t_RT
			| t_RV
			| t_Ri
			| t_SC
			| t_SH
			| t_SI
			| t_SR
			| t_ST
			| t_Sb
			| t_Sf
			| t_Si
			| t_TE
			| t_TI
			| t_Te
			| t_Ts
			| t_VS
			| t_WP
			| t_WS
			| t_ZH
			| t_ZR
			| t_al
			| t_bc
			| t_cd
			| t_ce
			| t_cl
			| t_cm
			| t_cs
			| t_da
			| t_db
			| t_dl
			| t_fd
			| t_fe
			| t_fs
			| t_k1
			| t_k2
			| t_k3
			| t_k4
			| t_k5
			| t_k6
			| t_k7
			| t_k8
			| t_k9
			| t_kB
			| t_kD
			| t_kI
			| t_kN
			| t_kP
			| t_kb
			| t_kd
			| t_ke
			| t_kh
			| t_kl
			| t_kr
			| t_ks
			| t_ku
			| t_le
			| t_mb
			| t_md
			| t_me
			| t_mr
			| t_ms
			| t_nd
			| t_op
			| t_se
			| t_so
			| t_sr
			| t_te
			| t_ti
			| t_ts
			| t_u7
			| t_ue
			| t_us
			| t_ut
			| t_vb
			| t_ve
			| t_vi
			| t_vs
			| t_xn
			| t_xs
			| tabline
			| tabpagemax
			| tabstop
			| tagbsearch
			| tagcase
			| tagfunc
			| taglength
			| tagrelative
			| tagstack
			| tags
			| tag
			| tal
			| ta
			| tbidi
			| tbis
			| tbi
			| tbs
			| tb
			| tcldll
			| tc
			| tenc
			| termbidi
			| termencoding
			| termguicolors
			| termwinkey
			| termwinscroll
			| termwinsize
			| termwintype
			| term
			| terse
			| textauto
			| textmode
			| textwidth
			| tfu
			| tf
			| tgc
			| tgst
			| thesaurus
			| tildeop
			| timeoutlen
			| timeout
			| titlelen
			| titleold
			| titlestring
			| title
			| tl
			| tm
			| toolbariconsize
			| toolbar
			| top
			| to
			| tpm
			| tr
			| tsl
			| tsr
			| ts
			| ttimeoutlen
			| ttimeout
			| ttm
			| ttybuiltin
			| ttyfast
			| ttymouse
			| ttym
			| ttyscroll
			| ttytype
			| tty
			| twk
			| twsl
			| tws
			| twt
			| tw
			| tx
			| uc
			| udf
			| udir
			| ul
			| undodir
			| undofile
			| undolevels
			| undoreload
			| updatecount
			| updatetime
			| ur
			| ut
			| varsofttabstop
			| vartabstop
			| vbs
			| vb
			| vdir
			| verbosefile
			| verbose
			| ve
			| vfile
			| viewdir
			| viewoptions
			| vif
			| viminfofile
			| viminfo
			| virtualedit
			| visualbell
			| vi
			| vop
			| vsts
			| vts
			| wak
			| warn
			| wa
			| wb
			| wcm
			| wcr
			| wc
			| wd
			| weirdinvert
			| wfh
			| wfw
			| whichwrap
			| wh
			| wic
			| wig
			| wildcharm
			| wildchar
			| wildignorecase
			| wildignore
			| wildmenu
			| wildmode
			| wildoptions
			| wim
			| winaltkeys
			| wincolor
			| window
			| winfixheight
			| winfixwidth
			| winheight
			| winminheight
			| winminwidth
			| winptydll
			| winwidth
			| wiv
			| wiw
			| wi
			| wmh
			| wmnu
			| wmw
			| wm
			| wop
			| wrapmargin
			| wrapscan
			| wrap
			| writeany
			| writebackup
			| writedelay
			| write
			| ws
			| ww
			) \\b
		"""

	vimPattern:
		name: "support.function.vimPattern.viml"
		match: """(?x) \\b
			( end
			| skip
			| start
			) \\b
		"""

	vimStdPlugin:
		name: "support.class.stdplugin.viml"
		match: """(?x) \\b
			( Arguments
			| Asm
			| Break
			| Cfilter
			| Clear
			| Continue
			| DiffOrig
			| Evaluate
			| Finish
			| Gdb
			| Lfilter
			| Man
			| N
			| Next
			| Over
			| P
			| Print
			| Program
			| Run
			| Source
			| Step
			| Stop
			| S
			| TOhtml
			| TermdebugCommand
			| Termdebug
			| Winbar
			| XMLent
			| XMLns
			) \\b
		"""

	vimSynCase:
		name: "support.function.vimSynCase.viml"
		match: """(?x) \\b
			( ignore
			| match
			) \\b
		"""

	vimSynType:
		name: "support.function.vimSynType.viml"
		match: """(?x) \\b
			( case
			| clear
			| cluster
			| enable
			| include
			| iskeyword
			| keyword
			| list
			| manual
			| match
			| off
			| on
			| region
			| reset
			| sync
			) \\b
		"""

	vimSyncC:
		name: "support.function.vimSyncC.viml"
		match: """(?x) \\b
			( ccomment
			| clear
			| fromstart
			) \\b
		"""

	vimSyncLinecont:
		name: "support.function.vimSyncLinecont.viml"
		match: """(?x) \\b
			( linecont
			) \\b
		"""

	vimSyncMatch:
		name: "support.function.vimSyncMatch.viml"
		match: """(?x) \\b
			( match
			) \\b
		"""

	vimSyncNone:
		name: "support.function.vimSyncNone.viml"
		match: """(?x) \\b
			( NONE
			) \\b
		"""

	vimSyncRegion:
		name: "support.function.vimSyncRegion.viml"
		match: """(?x) \\b
			( region
			) \\b
		"""

	vimUserAttrbCmplt:
		name: "support.function.vimUserAttrbCmplt.viml"
		match: """(?x) \\b
			( augroup
			| behave
			| buffer
			| color
			| command
			| compiler
			| cscope
			| customlist
			| custom
			| dir
			| environment
			| event
			| expression
			| file_in_path
			| filetype
			| file
			| function
			| help
			| highlight
			| history
			| locale
			| mapping
			| menu
			| option
			| packadd
			| shellcmd
			| sign
			| syntax
			| syntime
			| tag_listfiles
			| tag
			| user
			| var
			) \\b
		"""

	vimUserAttrbKey:
		name: "support.function.vimUserAttrbKey.viml"
		match: """(?x) \\b
			( bang?
			| bar
			| com
			| complete
			| cou
			| count
			| n
			| nargs
			| ra
			| range
			| re
			| register
			) \\b
		"""

	vimUserCommand:
		name: "support.function.vimUserCommand.viml"
		match: """(?x) \\b
			( com
			| command
			) \\b
		"""
